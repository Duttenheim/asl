Terminals unused in grammar

   CHAR_LITERAL
   STRUCT
   CONST
   BREAK
   CONTINUE
   RETURN
   '%'


Grammar

    0 $accept: statement_list $end

    1 type: DOUBLE
    2     | FLOAT
    3     | INT
    4     | UNSIGNED_INT
    5     | LONG
    6     | UNSIGNED_LONG
    7     | VOID
    8     | IDENTIFIER

    9 arg_list: expression
   10         | arg_list ',' expression

   11 expression: expr
   12           | expr '?' expression ':' expression

   13 expr: binaryexpr

   14 binaryexpr: unaryexpr '+' unaryexpr
   15           | unaryexpr '-' unaryexpr
   16           | unaryexpr '*' unaryexpr
   17           | unaryexpr '/' unaryexpr
   18           | unaryexpr

   19 unaryexpr: '+' ordinaryexpr
   20          | '-' ordinaryexpr
   21          | '!' ordinaryexpr
   22          | '~' ordinaryexpr
   23          | ordinaryexpr

   24 ordinaryexpr: callexpr
   25             | atom

   26 callexpr: IDENTIFIER '(' arg_list ')'
   27         | IDENTIFIER '(' ')'

   28 atom: INT_LITERAL
   29     | FLOAT_LITERAL
   30     | STRING_LITERAL
   31     | IDENTIFIER
   32     | '(' expression ')'

   33 statement: condition_statement
   34          | while_statement
   35          | for_statement
   36          | declaration
   37          | function
   38          | error ';'
   39          | error '}'

   40 declaration: type IDENTIFIER ';'
   41            | type IDENTIFIER '=' expression ';'

   42 condition_statement: IF '(' expression ')' '{' statement_list '}'
   43                    | IF '(' expression ')' statement
   44                    | ELSE '{' statement_list '}'
   45                    | ELSE statement

   46 while_statement: WHILE '(' expression ')' '{' statement_list '}'
   47                | WHILE '(' expression ')' statement

   48 for_statement: FOR '(' declaration ';' expression ';' expression ')'
   49              | FOR '(' ';' expression ';' expression ')'
   50              | FOR '(' ';' ';' expression ')'
   51              | FOR '(' ';' ';' ')'

   52 statement_list: statement
   53               | statement_list statement

   54 param_list: expression
   55           | param_list ',' expression

   56 function: type IDENTIFIER '(' param_list ')' '{' statement_list '}'
   57         | type IDENTIFIER '(' ')' '{' statement_list '}'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 21
'%' (37)
'(' (40) 26 27 32 42 43 46 47 48 49 50 51 56 57
')' (41) 26 27 32 42 43 46 47 48 49 50 51 56 57
'*' (42) 16
'+' (43) 14 19
',' (44) 10 55
'-' (45) 15 20
'/' (47) 17
':' (58) 12
';' (59) 38 40 41 48 49 50 51
'=' (61) 41
'?' (63) 12
'{' (123) 42 44 46 56 57
'}' (125) 39 42 44 46 56 57
'~' (126) 22
error (256) 38 39
INT_LITERAL (258) 28
FLOAT_LITERAL (259) 29
CHAR_LITERAL (260)
STRING_LITERAL (261) 30
DOUBLE (262) 1
FLOAT (263) 2
INT (264) 3
UNSIGNED_INT (265) 4
LONG (266) 5
UNSIGNED_LONG (267) 6
VOID (268) 7
STRUCT (269)
CONST (270)
FOR (271) 48 49 50 51
WHILE (272) 46 47
BREAK (273)
CONTINUE (274)
IF (275) 42 43
ELSE (276) 44 45
RETURN (277)
IDENTIFIER (278) 8 26 27 31 40 41 56 57


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
type (41)
    on left: 1 2 3 4 5 6 7 8, on right: 40 41 56 57
arg_list (42)
    on left: 9 10, on right: 10 26
expression (43)
    on left: 11 12, on right: 9 10 12 32 41 42 43 46 47 48 49 50 54
    55
expr (44)
    on left: 13, on right: 11 12
binaryexpr (45)
    on left: 14 15 16 17 18, on right: 13
unaryexpr (46)
    on left: 19 20 21 22 23, on right: 14 15 16 17 18
ordinaryexpr (47)
    on left: 24 25, on right: 19 20 21 22 23
callexpr (48)
    on left: 26 27, on right: 24
atom (49)
    on left: 28 29 30 31 32, on right: 25
statement (50)
    on left: 33 34 35 36 37 38 39, on right: 43 45 47 52 53
declaration (51)
    on left: 40 41, on right: 36 48
condition_statement (52)
    on left: 42 43 44 45, on right: 33
while_statement (53)
    on left: 46 47, on right: 34
for_statement (54)
    on left: 48 49 50 51, on right: 35
statement_list (55)
    on left: 52 53, on right: 0 42 44 46 53 56 57
param_list (56)
    on left: 54 55, on right: 55 56
function (57)
    on left: 56 57, on right: 37


State 0

    0 $accept: . statement_list $end

    error          shift, and go to state 1
    DOUBLE         shift, and go to state 2
    FLOAT          shift, and go to state 3
    INT            shift, and go to state 4
    UNSIGNED_INT   shift, and go to state 5
    LONG           shift, and go to state 6
    UNSIGNED_LONG  shift, and go to state 7
    VOID           shift, and go to state 8
    FOR            shift, and go to state 9
    WHILE          shift, and go to state 10
    IF             shift, and go to state 11
    ELSE           shift, and go to state 12
    IDENTIFIER     shift, and go to state 13

    type                 go to state 14
    statement            go to state 15
    declaration          go to state 16
    condition_statement  go to state 17
    while_statement      go to state 18
    for_statement        go to state 19
    statement_list       go to state 20
    function             go to state 21


State 1

   38 statement: error . ';'
   39          | error . '}'

    ';'  shift, and go to state 22
    '}'  shift, and go to state 23


State 2

    1 type: DOUBLE .

    $default  reduce using rule 1 (type)


State 3

    2 type: FLOAT .

    $default  reduce using rule 2 (type)


State 4

    3 type: INT .

    $default  reduce using rule 3 (type)


State 5

    4 type: UNSIGNED_INT .

    $default  reduce using rule 4 (type)


State 6

    5 type: LONG .

    $default  reduce using rule 5 (type)


State 7

    6 type: UNSIGNED_LONG .

    $default  reduce using rule 6 (type)


State 8

    7 type: VOID .

    $default  reduce using rule 7 (type)


State 9

   48 for_statement: FOR . '(' declaration ';' expression ';' expression ')'
   49              | FOR . '(' ';' expression ';' expression ')'
   50              | FOR . '(' ';' ';' expression ')'
   51              | FOR . '(' ';' ';' ')'

    '('  shift, and go to state 24


State 10

   46 while_statement: WHILE . '(' expression ')' '{' statement_list '}'
   47                | WHILE . '(' expression ')' statement

    '('  shift, and go to state 25


State 11

   42 condition_statement: IF . '(' expression ')' '{' statement_list '}'
   43                    | IF . '(' expression ')' statement

    '('  shift, and go to state 26


State 12

   44 condition_statement: ELSE . '{' statement_list '}'
   45                    | ELSE . statement

    error          shift, and go to state 1
    DOUBLE         shift, and go to state 2
    FLOAT          shift, and go to state 3
    INT            shift, and go to state 4
    UNSIGNED_INT   shift, and go to state 5
    LONG           shift, and go to state 6
    UNSIGNED_LONG  shift, and go to state 7
    VOID           shift, and go to state 8
    FOR            shift, and go to state 9
    WHILE          shift, and go to state 10
    IF             shift, and go to state 11
    ELSE           shift, and go to state 12
    IDENTIFIER     shift, and go to state 13
    '{'            shift, and go to state 27

    type                 go to state 14
    statement            go to state 28
    declaration          go to state 16
    condition_statement  go to state 17
    while_statement      go to state 18
    for_statement        go to state 19
    function             go to state 21


State 13

    8 type: IDENTIFIER .

    $default  reduce using rule 8 (type)


State 14

   40 declaration: type . IDENTIFIER ';'
   41            | type . IDENTIFIER '=' expression ';'
   56 function: type . IDENTIFIER '(' param_list ')' '{' statement_list '}'
   57         | type . IDENTIFIER '(' ')' '{' statement_list '}'

    IDENTIFIER  shift, and go to state 29


State 15

   52 statement_list: statement .

    $default  reduce using rule 52 (statement_list)


State 16

   36 statement: declaration .

    $default  reduce using rule 36 (statement)


State 17

   33 statement: condition_statement .

    $default  reduce using rule 33 (statement)


State 18

   34 statement: while_statement .

    $default  reduce using rule 34 (statement)


State 19

   35 statement: for_statement .

    $default  reduce using rule 35 (statement)


State 20

    0 $accept: statement_list . $end
   53 statement_list: statement_list . statement

    $end           shift, and go to state 30
    error          shift, and go to state 1
    DOUBLE         shift, and go to state 2
    FLOAT          shift, and go to state 3
    INT            shift, and go to state 4
    UNSIGNED_INT   shift, and go to state 5
    LONG           shift, and go to state 6
    UNSIGNED_LONG  shift, and go to state 7
    VOID           shift, and go to state 8
    FOR            shift, and go to state 9
    WHILE          shift, and go to state 10
    IF             shift, and go to state 11
    ELSE           shift, and go to state 12
    IDENTIFIER     shift, and go to state 13

    type                 go to state 14
    statement            go to state 31
    declaration          go to state 16
    condition_statement  go to state 17
    while_statement      go to state 18
    for_statement        go to state 19
    function             go to state 21


State 21

   37 statement: function .

    $default  reduce using rule 37 (statement)


State 22

   38 statement: error ';' .

    $default  reduce using rule 38 (statement)


State 23

   39 statement: error '}' .

    $default  reduce using rule 39 (statement)


State 24

   48 for_statement: FOR '(' . declaration ';' expression ';' expression ')'
   49              | FOR '(' . ';' expression ';' expression ')'
   50              | FOR '(' . ';' ';' expression ')'
   51              | FOR '(' . ';' ';' ')'

    DOUBLE         shift, and go to state 2
    FLOAT          shift, and go to state 3
    INT            shift, and go to state 4
    UNSIGNED_INT   shift, and go to state 5
    LONG           shift, and go to state 6
    UNSIGNED_LONG  shift, and go to state 7
    VOID           shift, and go to state 8
    IDENTIFIER     shift, and go to state 13
    ';'            shift, and go to state 32

    type         go to state 33
    declaration  go to state 34


State 25

   46 while_statement: WHILE '(' . expression ')' '{' statement_list '}'
   47                | WHILE '(' . expression ')' statement

    INT_LITERAL     shift, and go to state 35
    FLOAT_LITERAL   shift, and go to state 36
    STRING_LITERAL  shift, and go to state 37
    IDENTIFIER      shift, and go to state 38
    '+'             shift, and go to state 39
    '-'             shift, and go to state 40
    '!'             shift, and go to state 41
    '~'             shift, and go to state 42
    '('             shift, and go to state 43

    expression    go to state 44
    expr          go to state 45
    binaryexpr    go to state 46
    unaryexpr     go to state 47
    ordinaryexpr  go to state 48
    callexpr      go to state 49
    atom          go to state 50


State 26

   42 condition_statement: IF '(' . expression ')' '{' statement_list '}'
   43                    | IF '(' . expression ')' statement

    INT_LITERAL     shift, and go to state 35
    FLOAT_LITERAL   shift, and go to state 36
    STRING_LITERAL  shift, and go to state 37
    IDENTIFIER      shift, and go to state 38
    '+'             shift, and go to state 39
    '-'             shift, and go to state 40
    '!'             shift, and go to state 41
    '~'             shift, and go to state 42
    '('             shift, and go to state 43

    expression    go to state 51
    expr          go to state 45
    binaryexpr    go to state 46
    unaryexpr     go to state 47
    ordinaryexpr  go to state 48
    callexpr      go to state 49
    atom          go to state 50


State 27

   44 condition_statement: ELSE '{' . statement_list '}'

    error          shift, and go to state 1
    DOUBLE         shift, and go to state 2
    FLOAT          shift, and go to state 3
    INT            shift, and go to state 4
    UNSIGNED_INT   shift, and go to state 5
    LONG           shift, and go to state 6
    UNSIGNED_LONG  shift, and go to state 7
    VOID           shift, and go to state 8
    FOR            shift, and go to state 9
    WHILE          shift, and go to state 10
    IF             shift, and go to state 11
    ELSE           shift, and go to state 12
    IDENTIFIER     shift, and go to state 13

    type                 go to state 14
    statement            go to state 15
    declaration          go to state 16
    condition_statement  go to state 17
    while_statement      go to state 18
    for_statement        go to state 19
    statement_list       go to state 52
    function             go to state 21


State 28

   45 condition_statement: ELSE statement .

    $default  reduce using rule 45 (condition_statement)


State 29

   40 declaration: type IDENTIFIER . ';'
   41            | type IDENTIFIER . '=' expression ';'
   56 function: type IDENTIFIER . '(' param_list ')' '{' statement_list '}'
   57         | type IDENTIFIER . '(' ')' '{' statement_list '}'

    '('  shift, and go to state 53
    ';'  shift, and go to state 54
    '='  shift, and go to state 55


State 30

    0 $accept: statement_list $end .

    $default  accept


State 31

   53 statement_list: statement_list statement .

    $default  reduce using rule 53 (statement_list)


State 32

   49 for_statement: FOR '(' ';' . expression ';' expression ')'
   50              | FOR '(' ';' . ';' expression ')'
   51              | FOR '(' ';' . ';' ')'

    INT_LITERAL     shift, and go to state 35
    FLOAT_LITERAL   shift, and go to state 36
    STRING_LITERAL  shift, and go to state 37
    IDENTIFIER      shift, and go to state 38
    '+'             shift, and go to state 39
    '-'             shift, and go to state 40
    '!'             shift, and go to state 41
    '~'             shift, and go to state 42
    '('             shift, and go to state 43
    ';'             shift, and go to state 56

    expression    go to state 57
    expr          go to state 45
    binaryexpr    go to state 46
    unaryexpr     go to state 47
    ordinaryexpr  go to state 48
    callexpr      go to state 49
    atom          go to state 50


State 33

   40 declaration: type . IDENTIFIER ';'
   41            | type . IDENTIFIER '=' expression ';'

    IDENTIFIER  shift, and go to state 58


State 34

   48 for_statement: FOR '(' declaration . ';' expression ';' expression ')'

    ';'  shift, and go to state 59


State 35

   28 atom: INT_LITERAL .

    $default  reduce using rule 28 (atom)


State 36

   29 atom: FLOAT_LITERAL .

    $default  reduce using rule 29 (atom)


State 37

   30 atom: STRING_LITERAL .

    $default  reduce using rule 30 (atom)


State 38

   26 callexpr: IDENTIFIER . '(' arg_list ')'
   27         | IDENTIFIER . '(' ')'
   31 atom: IDENTIFIER .

    '('  shift, and go to state 60

    $default  reduce using rule 31 (atom)


State 39

   19 unaryexpr: '+' . ordinaryexpr

    INT_LITERAL     shift, and go to state 35
    FLOAT_LITERAL   shift, and go to state 36
    STRING_LITERAL  shift, and go to state 37
    IDENTIFIER      shift, and go to state 38
    '('             shift, and go to state 43

    ordinaryexpr  go to state 61
    callexpr      go to state 49
    atom          go to state 50


State 40

   20 unaryexpr: '-' . ordinaryexpr

    INT_LITERAL     shift, and go to state 35
    FLOAT_LITERAL   shift, and go to state 36
    STRING_LITERAL  shift, and go to state 37
    IDENTIFIER      shift, and go to state 38
    '('             shift, and go to state 43

    ordinaryexpr  go to state 62
    callexpr      go to state 49
    atom          go to state 50


State 41

   21 unaryexpr: '!' . ordinaryexpr

    INT_LITERAL     shift, and go to state 35
    FLOAT_LITERAL   shift, and go to state 36
    STRING_LITERAL  shift, and go to state 37
    IDENTIFIER      shift, and go to state 38
    '('             shift, and go to state 43

    ordinaryexpr  go to state 63
    callexpr      go to state 49
    atom          go to state 50


State 42

   22 unaryexpr: '~' . ordinaryexpr

    INT_LITERAL     shift, and go to state 35
    FLOAT_LITERAL   shift, and go to state 36
    STRING_LITERAL  shift, and go to state 37
    IDENTIFIER      shift, and go to state 38
    '('             shift, and go to state 43

    ordinaryexpr  go to state 64
    callexpr      go to state 49
    atom          go to state 50


State 43

   32 atom: '(' . expression ')'

    INT_LITERAL     shift, and go to state 35
    FLOAT_LITERAL   shift, and go to state 36
    STRING_LITERAL  shift, and go to state 37
    IDENTIFIER      shift, and go to state 38
    '+'             shift, and go to state 39
    '-'             shift, and go to state 40
    '!'             shift, and go to state 41
    '~'             shift, and go to state 42
    '('             shift, and go to state 43

    expression    go to state 65
    expr          go to state 45
    binaryexpr    go to state 46
    unaryexpr     go to state 47
    ordinaryexpr  go to state 48
    callexpr      go to state 49
    atom          go to state 50


State 44

   46 while_statement: WHILE '(' expression . ')' '{' statement_list '}'
   47                | WHILE '(' expression . ')' statement

    ')'  shift, and go to state 66


State 45

   11 expression: expr .
   12           | expr . '?' expression ':' expression

    '?'  shift, and go to state 67

    $default  reduce using rule 11 (expression)


State 46

   13 expr: binaryexpr .

    $default  reduce using rule 13 (expr)


State 47

   14 binaryexpr: unaryexpr . '+' unaryexpr
   15           | unaryexpr . '-' unaryexpr
   16           | unaryexpr . '*' unaryexpr
   17           | unaryexpr . '/' unaryexpr
   18           | unaryexpr .

    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71

    $default  reduce using rule 18 (binaryexpr)


State 48

   23 unaryexpr: ordinaryexpr .

    $default  reduce using rule 23 (unaryexpr)


State 49

   24 ordinaryexpr: callexpr .

    $default  reduce using rule 24 (ordinaryexpr)


State 50

   25 ordinaryexpr: atom .

    $default  reduce using rule 25 (ordinaryexpr)


State 51

   42 condition_statement: IF '(' expression . ')' '{' statement_list '}'
   43                    | IF '(' expression . ')' statement

    ')'  shift, and go to state 72


State 52

   44 condition_statement: ELSE '{' statement_list . '}'
   53 statement_list: statement_list . statement

    error          shift, and go to state 1
    DOUBLE         shift, and go to state 2
    FLOAT          shift, and go to state 3
    INT            shift, and go to state 4
    UNSIGNED_INT   shift, and go to state 5
    LONG           shift, and go to state 6
    UNSIGNED_LONG  shift, and go to state 7
    VOID           shift, and go to state 8
    FOR            shift, and go to state 9
    WHILE          shift, and go to state 10
    IF             shift, and go to state 11
    ELSE           shift, and go to state 12
    IDENTIFIER     shift, and go to state 13
    '}'            shift, and go to state 73

    type                 go to state 14
    statement            go to state 31
    declaration          go to state 16
    condition_statement  go to state 17
    while_statement      go to state 18
    for_statement        go to state 19
    function             go to state 21


State 53

   56 function: type IDENTIFIER '(' . param_list ')' '{' statement_list '}'
   57         | type IDENTIFIER '(' . ')' '{' statement_list '}'

    INT_LITERAL     shift, and go to state 35
    FLOAT_LITERAL   shift, and go to state 36
    STRING_LITERAL  shift, and go to state 37
    IDENTIFIER      shift, and go to state 38
    '+'             shift, and go to state 39
    '-'             shift, and go to state 40
    '!'             shift, and go to state 41
    '~'             shift, and go to state 42
    '('             shift, and go to state 43
    ')'             shift, and go to state 74

    expression    go to state 75
    expr          go to state 45
    binaryexpr    go to state 46
    unaryexpr     go to state 47
    ordinaryexpr  go to state 48
    callexpr      go to state 49
    atom          go to state 50
    param_list    go to state 76


State 54

   40 declaration: type IDENTIFIER ';' .

    $default  reduce using rule 40 (declaration)


State 55

   41 declaration: type IDENTIFIER '=' . expression ';'

    INT_LITERAL     shift, and go to state 35
    FLOAT_LITERAL   shift, and go to state 36
    STRING_LITERAL  shift, and go to state 37
    IDENTIFIER      shift, and go to state 38
    '+'             shift, and go to state 39
    '-'             shift, and go to state 40
    '!'             shift, and go to state 41
    '~'             shift, and go to state 42
    '('             shift, and go to state 43

    expression    go to state 77
    expr          go to state 45
    binaryexpr    go to state 46
    unaryexpr     go to state 47
    ordinaryexpr  go to state 48
    callexpr      go to state 49
    atom          go to state 50


State 56

   50 for_statement: FOR '(' ';' ';' . expression ')'
   51              | FOR '(' ';' ';' . ')'

    INT_LITERAL     shift, and go to state 35
    FLOAT_LITERAL   shift, and go to state 36
    STRING_LITERAL  shift, and go to state 37
    IDENTIFIER      shift, and go to state 38
    '+'             shift, and go to state 39
    '-'             shift, and go to state 40
    '!'             shift, and go to state 41
    '~'             shift, and go to state 42
    '('             shift, and go to state 43
    ')'             shift, and go to state 78

    expression    go to state 79
    expr          go to state 45
    binaryexpr    go to state 46
    unaryexpr     go to state 47
    ordinaryexpr  go to state 48
    callexpr      go to state 49
    atom          go to state 50


State 57

   49 for_statement: FOR '(' ';' expression . ';' expression ')'

    ';'  shift, and go to state 80


State 58

   40 declaration: type IDENTIFIER . ';'
   41            | type IDENTIFIER . '=' expression ';'

    ';'  shift, and go to state 54
    '='  shift, and go to state 55


State 59

   48 for_statement: FOR '(' declaration ';' . expression ';' expression ')'

    INT_LITERAL     shift, and go to state 35
    FLOAT_LITERAL   shift, and go to state 36
    STRING_LITERAL  shift, and go to state 37
    IDENTIFIER      shift, and go to state 38
    '+'             shift, and go to state 39
    '-'             shift, and go to state 40
    '!'             shift, and go to state 41
    '~'             shift, and go to state 42
    '('             shift, and go to state 43

    expression    go to state 81
    expr          go to state 45
    binaryexpr    go to state 46
    unaryexpr     go to state 47
    ordinaryexpr  go to state 48
    callexpr      go to state 49
    atom          go to state 50


State 60

   26 callexpr: IDENTIFIER '(' . arg_list ')'
   27         | IDENTIFIER '(' . ')'

    INT_LITERAL     shift, and go to state 35
    FLOAT_LITERAL   shift, and go to state 36
    STRING_LITERAL  shift, and go to state 37
    IDENTIFIER      shift, and go to state 38
    '+'             shift, and go to state 39
    '-'             shift, and go to state 40
    '!'             shift, and go to state 41
    '~'             shift, and go to state 42
    '('             shift, and go to state 43
    ')'             shift, and go to state 82

    arg_list      go to state 83
    expression    go to state 84
    expr          go to state 45
    binaryexpr    go to state 46
    unaryexpr     go to state 47
    ordinaryexpr  go to state 48
    callexpr      go to state 49
    atom          go to state 50


State 61

   19 unaryexpr: '+' ordinaryexpr .

    $default  reduce using rule 19 (unaryexpr)


State 62

   20 unaryexpr: '-' ordinaryexpr .

    $default  reduce using rule 20 (unaryexpr)


State 63

   21 unaryexpr: '!' ordinaryexpr .

    $default  reduce using rule 21 (unaryexpr)


State 64

   22 unaryexpr: '~' ordinaryexpr .

    $default  reduce using rule 22 (unaryexpr)


State 65

   32 atom: '(' expression . ')'

    ')'  shift, and go to state 85


State 66

   46 while_statement: WHILE '(' expression ')' . '{' statement_list '}'
   47                | WHILE '(' expression ')' . statement

    error          shift, and go to state 1
    DOUBLE         shift, and go to state 2
    FLOAT          shift, and go to state 3
    INT            shift, and go to state 4
    UNSIGNED_INT   shift, and go to state 5
    LONG           shift, and go to state 6
    UNSIGNED_LONG  shift, and go to state 7
    VOID           shift, and go to state 8
    FOR            shift, and go to state 9
    WHILE          shift, and go to state 10
    IF             shift, and go to state 11
    ELSE           shift, and go to state 12
    IDENTIFIER     shift, and go to state 13
    '{'            shift, and go to state 86

    type                 go to state 14
    statement            go to state 87
    declaration          go to state 16
    condition_statement  go to state 17
    while_statement      go to state 18
    for_statement        go to state 19
    function             go to state 21


State 67

   12 expression: expr '?' . expression ':' expression

    INT_LITERAL     shift, and go to state 35
    FLOAT_LITERAL   shift, and go to state 36
    STRING_LITERAL  shift, and go to state 37
    IDENTIFIER      shift, and go to state 38
    '+'             shift, and go to state 39
    '-'             shift, and go to state 40
    '!'             shift, and go to state 41
    '~'             shift, and go to state 42
    '('             shift, and go to state 43

    expression    go to state 88
    expr          go to state 45
    binaryexpr    go to state 46
    unaryexpr     go to state 47
    ordinaryexpr  go to state 48
    callexpr      go to state 49
    atom          go to state 50


State 68

   14 binaryexpr: unaryexpr '+' . unaryexpr

    INT_LITERAL     shift, and go to state 35
    FLOAT_LITERAL   shift, and go to state 36
    STRING_LITERAL  shift, and go to state 37
    IDENTIFIER      shift, and go to state 38
    '+'             shift, and go to state 39
    '-'             shift, and go to state 40
    '!'             shift, and go to state 41
    '~'             shift, and go to state 42
    '('             shift, and go to state 43

    unaryexpr     go to state 89
    ordinaryexpr  go to state 48
    callexpr      go to state 49
    atom          go to state 50


State 69

   15 binaryexpr: unaryexpr '-' . unaryexpr

    INT_LITERAL     shift, and go to state 35
    FLOAT_LITERAL   shift, and go to state 36
    STRING_LITERAL  shift, and go to state 37
    IDENTIFIER      shift, and go to state 38
    '+'             shift, and go to state 39
    '-'             shift, and go to state 40
    '!'             shift, and go to state 41
    '~'             shift, and go to state 42
    '('             shift, and go to state 43

    unaryexpr     go to state 90
    ordinaryexpr  go to state 48
    callexpr      go to state 49
    atom          go to state 50


State 70

   16 binaryexpr: unaryexpr '*' . unaryexpr

    INT_LITERAL     shift, and go to state 35
    FLOAT_LITERAL   shift, and go to state 36
    STRING_LITERAL  shift, and go to state 37
    IDENTIFIER      shift, and go to state 38
    '+'             shift, and go to state 39
    '-'             shift, and go to state 40
    '!'             shift, and go to state 41
    '~'             shift, and go to state 42
    '('             shift, and go to state 43

    unaryexpr     go to state 91
    ordinaryexpr  go to state 48
    callexpr      go to state 49
    atom          go to state 50


State 71

   17 binaryexpr: unaryexpr '/' . unaryexpr

    INT_LITERAL     shift, and go to state 35
    FLOAT_LITERAL   shift, and go to state 36
    STRING_LITERAL  shift, and go to state 37
    IDENTIFIER      shift, and go to state 38
    '+'             shift, and go to state 39
    '-'             shift, and go to state 40
    '!'             shift, and go to state 41
    '~'             shift, and go to state 42
    '('             shift, and go to state 43

    unaryexpr     go to state 92
    ordinaryexpr  go to state 48
    callexpr      go to state 49
    atom          go to state 50


State 72

   42 condition_statement: IF '(' expression ')' . '{' statement_list '}'
   43                    | IF '(' expression ')' . statement

    error          shift, and go to state 1
    DOUBLE         shift, and go to state 2
    FLOAT          shift, and go to state 3
    INT            shift, and go to state 4
    UNSIGNED_INT   shift, and go to state 5
    LONG           shift, and go to state 6
    UNSIGNED_LONG  shift, and go to state 7
    VOID           shift, and go to state 8
    FOR            shift, and go to state 9
    WHILE          shift, and go to state 10
    IF             shift, and go to state 11
    ELSE           shift, and go to state 12
    IDENTIFIER     shift, and go to state 13
    '{'            shift, and go to state 93

    type                 go to state 14
    statement            go to state 94
    declaration          go to state 16
    condition_statement  go to state 17
    while_statement      go to state 18
    for_statement        go to state 19
    function             go to state 21


State 73

   44 condition_statement: ELSE '{' statement_list '}' .

    $default  reduce using rule 44 (condition_statement)


State 74

   57 function: type IDENTIFIER '(' ')' . '{' statement_list '}'

    '{'  shift, and go to state 95


State 75

   54 param_list: expression .

    $default  reduce using rule 54 (param_list)


State 76

   55 param_list: param_list . ',' expression
   56 function: type IDENTIFIER '(' param_list . ')' '{' statement_list '}'

    ','  shift, and go to state 96
    ')'  shift, and go to state 97


State 77

   41 declaration: type IDENTIFIER '=' expression . ';'

    ';'  shift, and go to state 98


State 78

   51 for_statement: FOR '(' ';' ';' ')' .

    $default  reduce using rule 51 (for_statement)


State 79

   50 for_statement: FOR '(' ';' ';' expression . ')'

    ')'  shift, and go to state 99


State 80

   49 for_statement: FOR '(' ';' expression ';' . expression ')'

    INT_LITERAL     shift, and go to state 35
    FLOAT_LITERAL   shift, and go to state 36
    STRING_LITERAL  shift, and go to state 37
    IDENTIFIER      shift, and go to state 38
    '+'             shift, and go to state 39
    '-'             shift, and go to state 40
    '!'             shift, and go to state 41
    '~'             shift, and go to state 42
    '('             shift, and go to state 43

    expression    go to state 100
    expr          go to state 45
    binaryexpr    go to state 46
    unaryexpr     go to state 47
    ordinaryexpr  go to state 48
    callexpr      go to state 49
    atom          go to state 50


State 81

   48 for_statement: FOR '(' declaration ';' expression . ';' expression ')'

    ';'  shift, and go to state 101


State 82

   27 callexpr: IDENTIFIER '(' ')' .

    $default  reduce using rule 27 (callexpr)


State 83

   10 arg_list: arg_list . ',' expression
   26 callexpr: IDENTIFIER '(' arg_list . ')'

    ','  shift, and go to state 102
    ')'  shift, and go to state 103


State 84

    9 arg_list: expression .

    $default  reduce using rule 9 (arg_list)


State 85

   32 atom: '(' expression ')' .

    $default  reduce using rule 32 (atom)


State 86

   46 while_statement: WHILE '(' expression ')' '{' . statement_list '}'

    error          shift, and go to state 1
    DOUBLE         shift, and go to state 2
    FLOAT          shift, and go to state 3
    INT            shift, and go to state 4
    UNSIGNED_INT   shift, and go to state 5
    LONG           shift, and go to state 6
    UNSIGNED_LONG  shift, and go to state 7
    VOID           shift, and go to state 8
    FOR            shift, and go to state 9
    WHILE          shift, and go to state 10
    IF             shift, and go to state 11
    ELSE           shift, and go to state 12
    IDENTIFIER     shift, and go to state 13

    type                 go to state 14
    statement            go to state 15
    declaration          go to state 16
    condition_statement  go to state 17
    while_statement      go to state 18
    for_statement        go to state 19
    statement_list       go to state 104
    function             go to state 21


State 87

   47 while_statement: WHILE '(' expression ')' statement .

    $default  reduce using rule 47 (while_statement)


State 88

   12 expression: expr '?' expression . ':' expression

    ':'  shift, and go to state 105


State 89

   14 binaryexpr: unaryexpr '+' unaryexpr .

    $default  reduce using rule 14 (binaryexpr)


State 90

   15 binaryexpr: unaryexpr '-' unaryexpr .

    $default  reduce using rule 15 (binaryexpr)


State 91

   16 binaryexpr: unaryexpr '*' unaryexpr .

    $default  reduce using rule 16 (binaryexpr)


State 92

   17 binaryexpr: unaryexpr '/' unaryexpr .

    $default  reduce using rule 17 (binaryexpr)


State 93

   42 condition_statement: IF '(' expression ')' '{' . statement_list '}'

    error          shift, and go to state 1
    DOUBLE         shift, and go to state 2
    FLOAT          shift, and go to state 3
    INT            shift, and go to state 4
    UNSIGNED_INT   shift, and go to state 5
    LONG           shift, and go to state 6
    UNSIGNED_LONG  shift, and go to state 7
    VOID           shift, and go to state 8
    FOR            shift, and go to state 9
    WHILE          shift, and go to state 10
    IF             shift, and go to state 11
    ELSE           shift, and go to state 12
    IDENTIFIER     shift, and go to state 13

    type                 go to state 14
    statement            go to state 15
    declaration          go to state 16
    condition_statement  go to state 17
    while_statement      go to state 18
    for_statement        go to state 19
    statement_list       go to state 106
    function             go to state 21


State 94

   43 condition_statement: IF '(' expression ')' statement .

    $default  reduce using rule 43 (condition_statement)


State 95

   57 function: type IDENTIFIER '(' ')' '{' . statement_list '}'

    error          shift, and go to state 1
    DOUBLE         shift, and go to state 2
    FLOAT          shift, and go to state 3
    INT            shift, and go to state 4
    UNSIGNED_INT   shift, and go to state 5
    LONG           shift, and go to state 6
    UNSIGNED_LONG  shift, and go to state 7
    VOID           shift, and go to state 8
    FOR            shift, and go to state 9
    WHILE          shift, and go to state 10
    IF             shift, and go to state 11
    ELSE           shift, and go to state 12
    IDENTIFIER     shift, and go to state 13

    type                 go to state 14
    statement            go to state 15
    declaration          go to state 16
    condition_statement  go to state 17
    while_statement      go to state 18
    for_statement        go to state 19
    statement_list       go to state 107
    function             go to state 21


State 96

   55 param_list: param_list ',' . expression

    INT_LITERAL     shift, and go to state 35
    FLOAT_LITERAL   shift, and go to state 36
    STRING_LITERAL  shift, and go to state 37
    IDENTIFIER      shift, and go to state 38
    '+'             shift, and go to state 39
    '-'             shift, and go to state 40
    '!'             shift, and go to state 41
    '~'             shift, and go to state 42
    '('             shift, and go to state 43

    expression    go to state 108
    expr          go to state 45
    binaryexpr    go to state 46
    unaryexpr     go to state 47
    ordinaryexpr  go to state 48
    callexpr      go to state 49
    atom          go to state 50


State 97

   56 function: type IDENTIFIER '(' param_list ')' . '{' statement_list '}'

    '{'  shift, and go to state 109


State 98

   41 declaration: type IDENTIFIER '=' expression ';' .

    $default  reduce using rule 41 (declaration)


State 99

   50 for_statement: FOR '(' ';' ';' expression ')' .

    $default  reduce using rule 50 (for_statement)


State 100

   49 for_statement: FOR '(' ';' expression ';' expression . ')'

    ')'  shift, and go to state 110


State 101

   48 for_statement: FOR '(' declaration ';' expression ';' . expression ')'

    INT_LITERAL     shift, and go to state 35
    FLOAT_LITERAL   shift, and go to state 36
    STRING_LITERAL  shift, and go to state 37
    IDENTIFIER      shift, and go to state 38
    '+'             shift, and go to state 39
    '-'             shift, and go to state 40
    '!'             shift, and go to state 41
    '~'             shift, and go to state 42
    '('             shift, and go to state 43

    expression    go to state 111
    expr          go to state 45
    binaryexpr    go to state 46
    unaryexpr     go to state 47
    ordinaryexpr  go to state 48
    callexpr      go to state 49
    atom          go to state 50


State 102

   10 arg_list: arg_list ',' . expression

    INT_LITERAL     shift, and go to state 35
    FLOAT_LITERAL   shift, and go to state 36
    STRING_LITERAL  shift, and go to state 37
    IDENTIFIER      shift, and go to state 38
    '+'             shift, and go to state 39
    '-'             shift, and go to state 40
    '!'             shift, and go to state 41
    '~'             shift, and go to state 42
    '('             shift, and go to state 43

    expression    go to state 112
    expr          go to state 45
    binaryexpr    go to state 46
    unaryexpr     go to state 47
    ordinaryexpr  go to state 48
    callexpr      go to state 49
    atom          go to state 50


State 103

   26 callexpr: IDENTIFIER '(' arg_list ')' .

    $default  reduce using rule 26 (callexpr)


State 104

   46 while_statement: WHILE '(' expression ')' '{' statement_list . '}'
   53 statement_list: statement_list . statement

    error          shift, and go to state 1
    DOUBLE         shift, and go to state 2
    FLOAT          shift, and go to state 3
    INT            shift, and go to state 4
    UNSIGNED_INT   shift, and go to state 5
    LONG           shift, and go to state 6
    UNSIGNED_LONG  shift, and go to state 7
    VOID           shift, and go to state 8
    FOR            shift, and go to state 9
    WHILE          shift, and go to state 10
    IF             shift, and go to state 11
    ELSE           shift, and go to state 12
    IDENTIFIER     shift, and go to state 13
    '}'            shift, and go to state 113

    type                 go to state 14
    statement            go to state 31
    declaration          go to state 16
    condition_statement  go to state 17
    while_statement      go to state 18
    for_statement        go to state 19
    function             go to state 21


State 105

   12 expression: expr '?' expression ':' . expression

    INT_LITERAL     shift, and go to state 35
    FLOAT_LITERAL   shift, and go to state 36
    STRING_LITERAL  shift, and go to state 37
    IDENTIFIER      shift, and go to state 38
    '+'             shift, and go to state 39
    '-'             shift, and go to state 40
    '!'             shift, and go to state 41
    '~'             shift, and go to state 42
    '('             shift, and go to state 43

    expression    go to state 114
    expr          go to state 45
    binaryexpr    go to state 46
    unaryexpr     go to state 47
    ordinaryexpr  go to state 48
    callexpr      go to state 49
    atom          go to state 50


State 106

   42 condition_statement: IF '(' expression ')' '{' statement_list . '}'
   53 statement_list: statement_list . statement

    error          shift, and go to state 1
    DOUBLE         shift, and go to state 2
    FLOAT          shift, and go to state 3
    INT            shift, and go to state 4
    UNSIGNED_INT   shift, and go to state 5
    LONG           shift, and go to state 6
    UNSIGNED_LONG  shift, and go to state 7
    VOID           shift, and go to state 8
    FOR            shift, and go to state 9
    WHILE          shift, and go to state 10
    IF             shift, and go to state 11
    ELSE           shift, and go to state 12
    IDENTIFIER     shift, and go to state 13
    '}'            shift, and go to state 115

    type                 go to state 14
    statement            go to state 31
    declaration          go to state 16
    condition_statement  go to state 17
    while_statement      go to state 18
    for_statement        go to state 19
    function             go to state 21


State 107

   53 statement_list: statement_list . statement
   57 function: type IDENTIFIER '(' ')' '{' statement_list . '}'

    error          shift, and go to state 1
    DOUBLE         shift, and go to state 2
    FLOAT          shift, and go to state 3
    INT            shift, and go to state 4
    UNSIGNED_INT   shift, and go to state 5
    LONG           shift, and go to state 6
    UNSIGNED_LONG  shift, and go to state 7
    VOID           shift, and go to state 8
    FOR            shift, and go to state 9
    WHILE          shift, and go to state 10
    IF             shift, and go to state 11
    ELSE           shift, and go to state 12
    IDENTIFIER     shift, and go to state 13
    '}'            shift, and go to state 116

    type                 go to state 14
    statement            go to state 31
    declaration          go to state 16
    condition_statement  go to state 17
    while_statement      go to state 18
    for_statement        go to state 19
    function             go to state 21


State 108

   55 param_list: param_list ',' expression .

    $default  reduce using rule 55 (param_list)


State 109

   56 function: type IDENTIFIER '(' param_list ')' '{' . statement_list '}'

    error          shift, and go to state 1
    DOUBLE         shift, and go to state 2
    FLOAT          shift, and go to state 3
    INT            shift, and go to state 4
    UNSIGNED_INT   shift, and go to state 5
    LONG           shift, and go to state 6
    UNSIGNED_LONG  shift, and go to state 7
    VOID           shift, and go to state 8
    FOR            shift, and go to state 9
    WHILE          shift, and go to state 10
    IF             shift, and go to state 11
    ELSE           shift, and go to state 12
    IDENTIFIER     shift, and go to state 13

    type                 go to state 14
    statement            go to state 15
    declaration          go to state 16
    condition_statement  go to state 17
    while_statement      go to state 18
    for_statement        go to state 19
    statement_list       go to state 117
    function             go to state 21


State 110

   49 for_statement: FOR '(' ';' expression ';' expression ')' .

    $default  reduce using rule 49 (for_statement)


State 111

   48 for_statement: FOR '(' declaration ';' expression ';' expression . ')'

    ')'  shift, and go to state 118


State 112

   10 arg_list: arg_list ',' expression .

    $default  reduce using rule 10 (arg_list)


State 113

   46 while_statement: WHILE '(' expression ')' '{' statement_list '}' .

    $default  reduce using rule 46 (while_statement)


State 114

   12 expression: expr '?' expression ':' expression .

    $default  reduce using rule 12 (expression)


State 115

   42 condition_statement: IF '(' expression ')' '{' statement_list '}' .

    $default  reduce using rule 42 (condition_statement)


State 116

   57 function: type IDENTIFIER '(' ')' '{' statement_list '}' .

    $default  reduce using rule 57 (function)


State 117

   53 statement_list: statement_list . statement
   56 function: type IDENTIFIER '(' param_list ')' '{' statement_list . '}'

    error          shift, and go to state 1
    DOUBLE         shift, and go to state 2
    FLOAT          shift, and go to state 3
    INT            shift, and go to state 4
    UNSIGNED_INT   shift, and go to state 5
    LONG           shift, and go to state 6
    UNSIGNED_LONG  shift, and go to state 7
    VOID           shift, and go to state 8
    FOR            shift, and go to state 9
    WHILE          shift, and go to state 10
    IF             shift, and go to state 11
    ELSE           shift, and go to state 12
    IDENTIFIER     shift, and go to state 13
    '}'            shift, and go to state 119

    type                 go to state 14
    statement            go to state 31
    declaration          go to state 16
    condition_statement  go to state 17
    while_statement      go to state 18
    for_statement        go to state 19
    function             go to state 21


State 118

   48 for_statement: FOR '(' declaration ';' expression ';' expression ')' .

    $default  reduce using rule 48 (for_statement)


State 119

   56 function: type IDENTIFIER '(' param_list ')' '{' statement_list '}' .

    $default  reduce using rule 56 (function)
